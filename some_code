#network,socket,tcp#
$header file$:<sys/types.h>:
       <socket.h>:
       <arpa/inet.h>:
       
#pthread#
$header file$:<pthread.h>
func:pthread_create  pthread_mutex_init pthread_mutex_lock pthread_mutex_unlock pthread_mutex_destory
type:pthread_t pthread_mutex_t
$Deadlock$:two mutex should be lock in the same order

#pthread,lock,mutex#
$type$:

#signal,Ctrl+c,Ctrl+z,Ctrl+d,console,linux,unix#
$header file$:<signal.h>
func:signal(parm_1,parm_2):parm_1:signal:param_2:the func when catch the signal
attention:when use this func, the program will run the param_2 func instead of practicing the default behavior except the kill signal 

#gdb,debug#
$command$:trace next:n
$call stack,bt,back trace$:bt 
	  jump in the stack: up: jump to up level
	  	   	  	  		 down: jump to down level
$set start up arguments int gdb$:"set args XXX XXX XXX"
				


##